- name: Install Quay Bridge Operator Subscription
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig }}"
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        labels:
          operators.coreos.com/quay-bridge-operator.openshift-operators: ''
        name: quay-bridge-operator
        namespace: quay
      spec:
        channel: stable-3.7
        installPlanApproval: Automatic
        name: quay-bridge-operator
        source: redhat-operators
        sourceNamespace: openshift-marketplace
        startingCSV: quay-bridge-operator.v3.7.10

- name: "Get Installed CSV"
  kubernetes.core.k8s_info:
    kubeconfig: "{{ k8s_kubeconfig }}"
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: "quay-bridge-operator"
    namespace: "quay"
  register: r_subscription
  retries: 30
  delay: 5
  until:
    - r_subscription.resources[0].status.currentCSV is defined
    - r_subscription.resources[0].status.currentCSV | length > 0

- name: "Wait until CSV is installed"
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ r_subscription.resources[0].status.currentCSV }}"
    namespace: "quay"
  register: r_csv
  retries: 30
  delay: 30
  until:
    - r_csv.resources[0].status.phase is defined
    - r_csv.resources[0].status.phase | length > 0
    - r_csv.resources[0].status.phase == "Succeeded"
  ignore_errors: true

- name: Check if Quay Instance URL is available
  command: oc get route -n quay quay-quay
  register: quay_url
  retries: 20
  delay: 5
  until: quay_url.rc == 0
  
- name: Get Quay Instance URL
  shell: "oc get route -n quay quay-quay | grep -v HOST | awk '{ print $2 }'"
  register: route_url

- name: Install Quay Bridge Instance
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig }}"
    definition:
      apiVersion: quay.redhat.com/v1
      kind: QuayIntegration
      metadata:
        name: quay
      spec:
        credentialsSecret:
          name: quay-credentials
          namespace: quay
          key: token
        clusterID: openshift
        insecureRegistry: true
        quayHostname: "https://{{ route_url.stdout }}"
