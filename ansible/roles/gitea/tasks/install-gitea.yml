---

- name: Create Gitea Namespace
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig }}"
    definition: "{{ lookup('template', 'gitea-namespace.yml.j2' ) | from_yaml }}"
  tags:
    - gitea

- name: Install Gitea Operator
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig }}"
    definition: "{{ lookup('file', 'operator-installation.yml' ) | from_yaml }}"
  tags:
    - gitea

- name: Install Gitea Operator Subscription
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig }}"
    definition: "{{ lookup('file', 'operator-subscription.yml' ) | from_yaml }}"
  tags:
    - gitea

- name: Wait for gitea CRD to be available
  kubernetes.core.k8s_info:
    kind: CustomResourceDefinition
    name: giteas.gpte.opentlc.com
  register: gitea_crd
  retries: 10
  delay: 10
  until: gitea_crd.resources | list | length == 1
  tags:
    - gitea

- name: Install Gitea Instance
  register: result
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig }}"
    definition: "{{ lookup('template', 'gitea-instance.yml.j2' ) | from_yaml }}"
  tags:
    - gitea

- name: Get route for gitea instance
  kubernetes.core.k8s_info:
    kind: Route
    namespace: "{{ gitea_namespace }}"
  register: gitea_instance_route
  changed_when: false
  retries: 15
  delay: 10
  until: gitea_instance_route.resources | list | length == 1
  tags:
    - gitea
    - gitea_repo

- name: Create variable with gitea route
  set_fact:
    gitea_url: "https://{{ gitea_instance_route.resources[0].spec.host }}/api/v1"
  tags:
    - gitea
    - gitea_repo


- name: Check if repository is already available
  ansible.builtin.uri:
    url: "{{ gitea_url }}/repos/{{ gitea_admin_user }}/{{ gitea_dest_repo }}"
    method: GET
    user: "{{ gitea_admin_user }}"
    password: "{{ gitea_admin_password }}"
    force_basic_auth: yes
  register: gitea_repo_exists
  changed_when: false
  retries: 15
  delay: 10
  until: gitea_repo_exists.status != 503
  failed_when: gitea_repo_exists.status != 200 and gitea_repo_exists.status != 404
  tags:
    - gitea
    - gitea_repo

- name: Create example repository for the workshop
  ansible.builtin.uri:
    url: "{{ gitea_url }}/repos/migrate"
    method: POST
    user: "{{ gitea_admin_user }}"
    password: "{{ gitea_admin_password }}"
    force_basic_auth: yes
    body_format: json
    body: "{{ lookup('ansible.builtin.template', 'payload_repository.json.j2') }}"
    status_code: 201
  when: gitea_repo_exists.status == 404
  tags:
    - gitea
    - gitea_repo
...